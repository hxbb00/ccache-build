name: Build
on:
  workflow_dispatch:

env:
  CTEST_OUTPUT_ON_FAILURE: ON
  VERBOSE: 1

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  build_and_test_msys:
    timeout-minutes: 30
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - sys: mingw64
            env: x86_64
            compiler: gcc

          - sys: mingw64
            env: x86_64
            compiler: clang

    name: 'Windows MSYS2 ${{ matrix.sys }} ${{ matrix.compiler }}'
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: '${{ matrix.sys }} Set up MSYS2'
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          update: true
          install: >-
            git
            diffutils
            tar
            mingw-w64-${{matrix.env}}-toolchain
            mingw-w64-${{matrix.env}}-cmake
            mingw-w64-${{matrix.env}}-ninja
            mingw-w64-${{matrix.env}}-hiredis
            mingw-w64-${{matrix.env}}-lld
            mingw-w64-${{matrix.env}}-${{matrix.compiler}}

      - name: Set up environment
        run: |
          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            echo "CC=gcc" >> $GITHUB_ENV
            echo "CXX=g++" >> $GITHUB_ENV
          else
            echo "CC=clang" >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          fi

      - name: Get source
        uses: actions/checkout@v4

      - name: Build and test
        run: ci/build
        continue-on-error: ${{ matrix.allow_test_failures == true &&
          steps.build-and-test.outputs.exit_status == 8 }}
        env:
          CMAKE_GENERATOR: Ninja
          CMAKE_PARAMS: -DCMAKE_BUILD_TYPE=CI
          TEST_CC: gcc

      - name: set release date
        run: |
          echo "RELEASE_DATE=$(date +%Y%m%d-%H%M%s)" >> ${GITHUB_ENV}
        shell: bash

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: 'Windows MSYS2 ${{ matrix.sys }} ${{ matrix.compiler }}'
          tag_name: ${{ env.RELEASE_DATE }}
          files: |
            ./ccache.exe
